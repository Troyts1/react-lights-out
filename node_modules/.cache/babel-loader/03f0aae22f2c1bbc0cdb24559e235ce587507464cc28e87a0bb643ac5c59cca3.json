{"ast":null,"code":"var _jsxFileName = \"/Users/troysummerall/Desktop/School/Softare-Engineer/Section-41-React_Fundamentals/41.8-Component-Design/Lightd-out-assignment/react-lights-out/src/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  nrows = 5,\n  ncols = 5,\n  chanceLightStartsOn = 0.25\n}) {\n  _s();\n  const [board, setBoard] = useState(createBoard);\n  function createBoard() {\n    return Array.from({\n      length: nrows\n    }).map(row => Array.from({\n      length: ncols\n    }).map(cell => Math.random() < chanceLightStartsOn));\n  }\n\n  // function createBoard() {\n  //   return Array.from({ length: nrows }).map(function(row) {\n  //     return Array.from({ length: ncols }).map(function(cell) {\n  //       return Math.random() < chanceLightStartsOn;\n  //     )\n  //   );\n  // }\n\n  function win() {\n    return board.every(function (row) {\n      return row.every(function (cell) {\n        return !cell;\n      });\n    });\n  }\n  function shuffleCells(coord) {\n    setBoard(oldBoard => {\n      const [y, x] = coord.split(\"-\").map(Number);\n      const flipCell = (y, x, boardCopy) => {\n        if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n          newBoard[y][x] = !newBoard[y][x];\n        }\n      };\n      const newBoard = newBoard.map(row => [...row]);\n      flipCell(y, x, newBoard);\n      flipCell(y, x - 1, newBoard);\n      flipCell(y, x + 1, newBoard);\n      flipCell(y - 1, x, newBoard);\n      flipCell(y + 1, x, newBoard);\n      return newBoard;\n    });\n  }\n  if (win()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"You Are The Winner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  let table = [];\n  for (let y = 0; y < nrows; y++) {\n    let row = [];\n    for (let x = 0; x < ncols; x++) {\n      let coord = `${y}-${x}`;\n      row.push( /*#__PURE__*/_jsxDEV(Cell, {\n        coords: coord,\n        isLit: board[y][x],\n        flipCellsAroundMe: () => shuffleCells(coord)\n      }, coord, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this));\n    }\n    table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: row\n    }, y, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"Board\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n_s(Board, \"zVoq4WVA109ToUXeeG7gqKArgbM=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Cell","jsxDEV","_jsxDEV","Board","nrows","ncols","chanceLightStartsOn","_s","board","setBoard","createBoard","Array","from","length","map","row","cell","Math","random","win","every","shuffleCells","coord","oldBoard","y","x","split","Number","flipCell","boardCopy","newBoard","children","fileName","_jsxFileName","lineNumber","columnNumber","table","push","coords","isLit","flipCellsAroundMe","className","_c","$RefreshReg$"],"sources":["/Users/troysummerall/Desktop/School/Softare-Engineer/Section-41-React_Fundamentals/41.8-Component-Design/Lightd-out-assignment/react-lights-out/src/Board.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Board.css\";\n\n\nfunction Board({nrows = 5, ncols = 5, chanceLightStartsOn = 0.25}) {\n  const [board, setBoard] = useState(createBoard);\n\n  function createBoard() {\n    return Array.from({length: nrows}).map(\n        row => Array.from({length: ncols}).map(\n            cell => Math.random() < chanceLightStartsOn\n        )\n    );\n  }\n\n\n\n\n\n  // function createBoard() {\n  //   return Array.from({ length: nrows }).map(function(row) {\n  //     return Array.from({ length: ncols }).map(function(cell) {\n  //       return Math.random() < chanceLightStartsOn;\n  //     )\n  //   );\n  // }\n\n\n  function win() {\n    return board.every(function(row) {\n      return row.every(function(cell) {\n        return !cell;\n      });\n    });\n  }\n  \n\n  function shuffleCells(coord) {\n    setBoard(oldBoard => {\n      const [y, x] = coord.split(\"-\").map(Number);\n\n      const flipCell = (y, x, boardCopy) => {\n\n        if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n          newBoard[y][x] = !newBoard[y][x];\n        }\n      };\n\n      const newBoard = newBoard.map(row => [...row]);\n\n      flipCell(y, x, newBoard);\n      flipCell(y, x - 1, newBoard);\n      flipCell(y, x + 1, newBoard);\n      flipCell(y - 1, x, newBoard);\n      flipCell(y + 1, x, newBoard);\n\n      return newBoard;\n    });\n  }\n\n\n  if (win()){\n    return <div>You Are The Winner</div>;\n   }\n\n  let table = [];\n\n  for (let y = 0; y < nrows; y++) {\n    let row = [];\n    for (let x = 0; x < ncols; x++) {\n      let coord = `${y}-${x}`;\n      row.push(\n        <Cell \n          key={coord} \n          coords={coord} \n          isLit={board[y][x]} \n          flipCellsAroundMe={() => shuffleCells(coord)} \n        />\n      );\n    }\n    table.push(<tr key={y}>{row}</tr>);\n  }\n  \n\n  return (\n      <table className=\"Board\">\n        <tbody>{table}</tbody>\n      </table>\n  );\n}\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}